#include <GL/glut.h>
#include <math.h>

#define width 640
#define height 480

void init(void)
{
	glClearColor(0.0,1.0,1.0,0.0);
	
}
void display(void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,0.0,0.0);
	glPointSize(5.0);
	int R = 150;
	GLfloat x[6];
	GLfloat y[6];
	GLfloat grad = (float) ((72*3.14)/180);
	GLfloat step;
	glBegin(GL_POINTS);
	
		
		x[0] = width / 2 ;
		y[0] = height / 2 ;
		x[1] = x[0];
		y[1] = y[0] + R;
		for (int i =2; i<6;i++)
		{
			step=((i-1)*grad);
			glVertex3f( x[i] = (float) (x[1] * cos(step) - y[1] * sin(step) + y[0] * sin(step) + x[0] * (1 - cos(step))),
            			 y[i] = (float) (x[1] * sin(step) + y[1] * cos(step) + y[0] * (1 - cos(step))  - x[0] * sin(step)),0.0);
		}
		
//		glVertex3f(x[0],y[0],0.0);
		glVertex3f(x[1],y[1],0.0);
	glEnd();
	glFlush();
}
void reshape(int w,int h)
{
	glViewport(0 , 0 ,(GLsizei) w,(GLsizei) h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0,(GLdouble) w,0.0,(GLdouble) h);
}
int main(int argc,char **argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);
	glutInitWindowSize(width,height);
	glutInitWindowPosition(100,100);
	glutCreateWindow(argv[0]);
	init();
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMainLoop();
	return 0;
	
}